-- XGEN: Autogenerated File

library IEEE;
library UNISIM;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use UNISIM.VComponents.all;
use ieee.std_logic_unsigned.all;
use work.argg_hdl_core.all;
use work.axisStream_slv32.all;


entity tb is 
end entity;



architecture rtl of tb is

--------------------------tb-----------------
--------------------------clkgen-----------------
  signal clkgen_clk : std_logic := '0'; 
-------------------------- end clkgen-----------------
--------------------------axmux-----------------
  signal axmux_clk : std_logic := '0'; 
  signal axmux_data_in_s2m : axiStream_slv32_s2m_a(4 - 1 downto 0)  := (others => axiStream_slv32_s2m_null);
  signal axmux_data_in_m2s : axiStream_slv32_m2s_a(4 - 1 downto 0)  := (others => axiStream_slv32_m2s_null);
  signal axmux_data_out_s2m : axiStream_slv32_s2m := axiStream_slv32_s2m_null;
  signal axmux_data_out_m2s : axiStream_slv32_m2s := axiStream_slv32_m2s_null;
-------------------------- end axmux-----------------
--------------------------d_s-----------------
  signal d_s_clk : std_logic := '0'; 
  signal d_s_data_out_s2m : axiStream_slv32_s2m := axiStream_slv32_s2m_null;
  signal d_s_data_out_m2s : axiStream_slv32_m2s := axiStream_slv32_m2s_null;
-------------------------- end d_s-----------------
-------------------------- end tb-----------------

begin
  -- begin architecture
  -- end architecture

  clkgen : entity work.clk_generator port map (
    clk => clkgen_clk
  );
  
  axmux : entity work.axiStreamMux port map (
    clk => axmux_clk,
    data_in_s2m => axmux_data_in_s2m,
    data_in_m2s => axmux_data_in_m2s,
    data_out_s2m => axmux_data_out_s2m,
    data_out_m2s => axmux_data_out_m2s
  );
  
  d_s : entity work.d_source port map (
    clk => d_s_clk,
    data_out_s2m => d_s_data_out_s2m,
    data_out_m2s => d_s_data_out_m2s
  );
  axmux_clk <= clkgen_clk;
  ---------------------------------------------------------------------
--  axmux_data_in(0) << d_s_data_out
axmux_data_in_m2s(0) <= d_s_data_out_m2s;
d_s_data_out_s2m <= axmux_data_in_s2m(0);
  d_s_clk <= clkgen_clk;
  
end architecture;