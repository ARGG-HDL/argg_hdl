-- XGEN: Autogenerated File

library IEEE;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use work.argg_hdl_core.all;
use work.axisStream_slv32.all;
use work.klm_globals_pack.all;
use work.register_t_pack.all;


entity InputDelay_tb is 
end entity;



architecture rtl of InputDelay_tb is

--------------------------InputDelay_tb-----------------
  signal data : std_logic_vector(31 downto 0) := x"00000005"; 
  signal k_globals : klm_globals := klm_globals_null;
--------------------------axprint-----------------
  signal axprint_ConfigIn_s2m : axiStream_slv32_s2m := axiStream_slv32_s2m_null;
  signal axprint_ConfigIn_m2s : axiStream_slv32_m2s := axiStream_slv32_m2s_null;
  signal axprint_globals : klm_globals := klm_globals_null;
-------------------------- end axprint-----------------
--------------------------clkgen-----------------
  signal clkgen_clk : std_logic := '0'; 
-------------------------- end clkgen-----------------
--------------------------d_source-----------------
  signal d_source_DataOut_s2m : axiStream_slv32_s2m := axiStream_slv32_s2m_null;
  signal d_source_DataOut_m2s : axiStream_slv32_m2s := axiStream_slv32_m2s_null;
  signal d_source_clk : std_logic := '0'; 
-------------------------- end d_source-----------------
--------------------------dut-----------------
  signal dut_ConfigIn_s2m : axiStream_slv32_s2m := axiStream_slv32_s2m_null;
  signal dut_ConfigIn_m2s : axiStream_slv32_m2s := axiStream_slv32_m2s_null;
  signal dut_ConfigOut_s2m : axiStream_slv32_s2m := axiStream_slv32_s2m_null;
  signal dut_ConfigOut_m2s : axiStream_slv32_m2s := axiStream_slv32_m2s_null;
  signal dut_globals : klm_globals := klm_globals_null;
-------------------------- end dut-----------------
-------------------------- end InputDelay_tb-----------------

begin
  -- begin architecture
  -- end architecture

  axprint : entity work.InputDelay_print port map (
    ConfigIn_s2m => axprint_ConfigIn_s2m,
    ConfigIn_m2s => axprint_ConfigIn_m2s,
    globals => axprint_globals
  );
  
  clkgen : entity work.clk_generator port map (
    clk => clkgen_clk
  );
  
  d_source : entity work.dataSource port map (
    DataOut_s2m => d_source_DataOut_s2m,
    DataOut_m2s => d_source_DataOut_m2s,
    clk => d_source_clk
  );
  
  dut : entity work.InputDelay port map (
    ConfigIn_s2m => dut_ConfigIn_s2m,
    ConfigIn_m2s => dut_ConfigIn_m2s,
    ConfigOut_s2m => dut_ConfigOut_s2m,
    ConfigOut_m2s => dut_ConfigOut_m2s,
    globals => dut_globals
  );
  k_globals.clk <= clkgen_clk;
  ---------------------------------------------------------------------
--  axprint_ConfigIn << dut_ConfigOut
axprint_ConfigIn_m2s <= dut_ConfigOut_m2s;
dut_ConfigOut_s2m <= axprint_ConfigIn_s2m;
  axprint_globals <= k_globals;
  d_source_clk <= k_globals.clk;
  ---------------------------------------------------------------------
--  dut_ConfigIn << d_source_DataOut
dut_ConfigIn_m2s <= d_source_DataOut_m2s;
d_source_DataOut_s2m <= dut_ConfigIn_s2m;
  dut_globals <= k_globals;
  
end architecture;