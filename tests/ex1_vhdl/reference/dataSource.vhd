-- XGEN: Autogenerated File

library IEEE;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use work.argg_hdl_core.all;
use work.axisStream_slv32.all;


entity dataSource is 
  port(
    DataOut_s2m :  in  axiStream_slv32_s2m := axiStream_slv32_s2m_null;
    DataOut_m2s :  out  axiStream_slv32_m2s := axiStream_slv32_m2s_null;
    clk :  in  std_logic := '0'
  );
end entity;



architecture rtl of dataSource is

--------------------------dataSource-----------------
  signal data : std_logic_vector(31 downto 0) := x"00000005"; 
-------------------------- end dataSource-----------------

begin
  -- begin architecture
  
-----------------------------------
proc : process(clk) is
  variable mast : axiStream_slv32_master := axiStream_slv32_master_null;
  begin
    if rising_edge(clk) then 
      pull( self  =>  mast, tx => DataOut_s2m);
  
      if (ready_to_send_0(self => mast)) then 
        send_data_01(self => mast, dataIn => data);
        data <= data + 2;
        
      end if;
        push( self  =>  mast, tx => DataOut_m2s);
  end if;
  
  end process;
  -- end architecture

end architecture;