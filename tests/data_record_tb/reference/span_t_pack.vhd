-- XGEN: Autogenerated File

library IEEE;
library UNISIM;
library work;
use IEEE.numeric_std.all;
use IEEE.std_logic_1164.all;
use UNISIM.VComponents.all;
use ieee.std_logic_unsigned.all;
use work.argg_hdl_core.all;


package span_t_pack is 

-------------------------------------------------------------------------
------- Start Psuedo Class span_t -------------------------

type span_t is record 
    start : std_logic_vector(7 downto 0);
    stop : std_logic_vector(7 downto 0);
end record;
    
    
  constant span_t_null : span_t:= (
    start => x"01",
    stop => x"10"
  );


    type span_t_a is array (natural range <>) of span_t;
        

  procedure pull (self : inout span_t; signal data_IO :  in  span_t);
  procedure push (self : inout span_t; signal data_IO :  out  span_t);
  function isInRange_11 (Signal self :   span_t; signal counter :   std_logic_vector) return boolean;
------- End Psuedo Class span_t -------------------------
-------------------------------------------------------------------------


end span_t_pack;


package body span_t_pack is

-------------------------------------------------------------------------
------- Start Psuedo Class span_t -------------------------
procedure pull (self : inout span_t; signal data_IO :  in  span_t) is
   
  begin 
 self  := data_IO; 
end procedure;

procedure push (self : inout span_t; signal data_IO :  out  span_t) is
   
  begin 
 data_IO  <=  self; 
end procedure;

function isInRange_11 (Signal self :   span_t; signal counter :   std_logic_vector) return boolean is
   
  begin 
 return ( self.start <= counter and counter <= self.stop) ;
   
end function;

------- End Psuedo Class span_t -------------------------
  -------------------------------------------------------------------------


end span_t_pack;

